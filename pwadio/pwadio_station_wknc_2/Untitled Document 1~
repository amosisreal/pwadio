  try:
                check_for_artist = Artist.objects.get(name__exact=item['artist_name_text'])
                print "#~#~#~#~#~#~#" + check_for_artist.name + "#~#~#~#~#~#~#~#~#"
                if check_for_artist:
                    item['artist'] = check_for_artist
                    print "<><><><><><><><><><> set artist to existing artist"
                else:
                    add_artist = Artist.objects.create(name=item['artist_name_text'])
                    item['artist'] = add_artist
                    print "><><><><><><><><><><><><><><> Added artist " + add_artist.name + " to artist table and rp table."
            except:
                print "><><><><><><><><><><><><><><><> something failed with the artist thing, setting to default."
                item['artist'] = Artist.objects.get(pk=1)
            # Compare item track_name_text to track.name - if exists do something, if not, add it.
            item['track'] = Track.objects.get(pk=1)


ype "help", "copyright", "credits" or "license" for more information.
(InteractiveConsole)
from pwadio_be_2.models import Artist, Track, MusicServices, MusicServices_Artist_Lookup, MusicServices_Track_Lookup, RunningPlaylist
import datetime
from datetime import date, timedelta

from scrapy.item import Item, Field
from scrapy.contrib.djangoitem import DjangoItem

class PwadioStationWknc2Item(DjangoItem):
    django_model = RunningPlaylist

item = PwadioStationWknc2Item()
item['artist_name_text'] = "funstuffs"
item['artist_name_text']
check_for_artist = Artist.objects.get(name__exact=item['artist_name_text'])
cd 


for property, value in vars(spider).iteritems():
    print property, ": ", value

 pt = ProcessingTime.objects.create(station_ID=rs, date_added=dt.datetime.now(), download_site_time=0, processing_time=0, total_elapsed_time=


ms = MusicService.objects.get(pk=1)
a_msl = MusicService_Artist_Lookup.create(date_added=pt.start_time, artist = add_artist, music_service = ms, music_service_object_id_from_web = iTunes_track[0].get_artist().get_id())
t_msl = MusicService_Track_Lookup.create(date_added=pt.start_time, track = add_track, music_service = ms, music_service_object_id_from_web = iTunes_track[0].get_id())
